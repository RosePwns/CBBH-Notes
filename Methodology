# Chandler Rose 
# Web App Pentesting
# March 2023

# Information Gathering (Passive)
## Infrastructure
- Netcraft - Offers information about servers
-- Visit https://sitereport.netcraft.com and entering the target domain.
- WayBack Machine
-- FInd old versions that may have useful comments or exposures
## Subdomains
- VirusTotal
-- VirusTotal maintains its DNS replication service, which is developed by preserving DNS resolutions made when users visit URLs given by them.
-- To receive information about a domain, type the domain name into the search bar and click on the "Relations" tab.
- Certificates
-- Another interesting source of information we can use to extract subdomains is SSL/TLS certificates. The main reason is Certificate Transparency (CT), a project that requires every SSL/TLS certificate issued by a Certificate Authority (CA) to be published in a publicly accessible log.
-- Examine CT logs/Find subdomains with https://censys.io & https://crt.sh. Introduce the domain name of our target organization to start discovering new subdomains. # Great for finding subdomains
Command: export TARGET="facebook.com"
Command: curl -s "https://crt.sh/?q=${TARGET}&output=json" | jq -r '.[] | "\(.name_value)\n\(.common_name)"' | sort -u > "${TARGET}_crt.sh.txt"
Command: head -n20 facebook.com_crt.sh.txt
- The Harvester
-- TheHarvester is a simple-to-use yet powerful and effective tool for early-stage penetration testing and red team engagements. We can use it to gather information to help identify a company's attack surface. The tool collects emails, names, subdomains, IP addresses, and URLs from various public data sources for passive information gathering.
# Information Gathering (Active)
## Infrastructure
- HTTP headers
curl -I "http://${TARGET}"
- WhatWeb
-- Quick 
whatweb -a3 https://www.facebook.com -v
- Wappalyzer
-- Like whatweb in the browser. 
- WafW00f
-- web application firewall (WAF) fingerprinting tool that sends requests and analyses responses to determine if a security solution is in place.
Install: sudo apt install wafw00f -y
Command: wafw00f -v https://www.tesla.com
- AquaTone
-- a tool for automatic and visual inspection of websites across many hosts and is convenient for quickly gaining an overview of HTTP-based attack surfaces by scanning a list of configurable ports, visiting the website with a headless Chrome browser, and taking and screenshot.
Install: sudo apt install golang chromium-driver
Install: go get github.com/michenriksen/aquatone
Install: export PATH="$PATH":"$HOME/go/bin"
Command: cat facebook_aquatone.txt | aquatone -out ./aquatone -screenshot-timeout 1000
## Subdomain
- Zone Transfer 
Command: nslookup -type=NS zonetransfer.me # Testing for name servers
Command: nslookup -type=any -query=AXFR zonetransfer.me nsztm1.digi.ninja # Testing for ANY and AXFR Zone Transfer
Command: nslookup -type=any -query=AXFR inlanefreight.htb 10.129.42.195 # FInd the FQDN.
Command: dig @10.129.178.67 NS axfr inlanefreight.htb # Get all Zone transfers
- Gobuster
-- Gobuster is a tool that we can use to perform subdomain enumeration.
-- Remember that during our passive subdomain enumeration activities, we found a pattern lert-api-shv-{NUMBER}-sin6.facebook.com. We can use this pattern to discover additional subdomains. The first step will be to create a patterns.txt file with the patterns previously discovered, for example:
Command: echo "lert-api-shv-{GOBUSTER}-sin6", "atlas-pp-shv-{GOBUSTER}-sin6" > patterns.txt
Command: export TARGET="facebook.com"
Command: export NS="d.ns.facebook.com"
Command: export WORDLIST="numbers.txt"
Command: gobuster dns -q -r "${NS}" -d "${TARGET}" -w "${WORDLIST}" -p ./patterns.txt -o "gobuster_${TARGET}.txt"
## Virtual Hosts
* A virtual host (vHost) is a feature that allows several websites to be hosted on a single server.
- Identify Virtual Host
Command: curl -s http://192.168.10.10 # Web server identified at that IP.
Command: curl -s http://192.168.10.10 -H "Host: randomtarget.com" # curl request sending domain previously identified in the HOST header.
Command: cp /opt/useful/SecLists/Discovery/DNS/namelist.txt ./vhosts
- VHost Fuzzing
Command: cat ./vhosts | while read vhost;do echo "\n********\nFUZZING: ${vhost}\n********";curl -s -I http://192.168.10.10 -H "HOST: ${vhost}.randomtarget.com" | grep "Content-Length: ";done
- Access Found VHost
Command: curl -s http://192.168.10.10 -H "Host: dev-admin.randomtarget.com"
- FFUF - Fuzz Faster U Fool
Command: curl -s http://192.168.10.10 -H "Host: dev-admin.randomtarget.com" # Fuzzing for VHost with size filter
## Website Crawling
Command: ffuf -recursion -recursion-depth 1 -u http://192.168.10.10/FUZZ -w /opt/useful/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt # This task can be very resource-intensive for the target server. If the website responds slower than usual, we can lower the rate of requests using the -rate parameter.
- *Finding Sensitive Information*
-- First create a list of found directory names from the wesbite. Save as folders.txt
-- Next create a file of all the common extensions. Save to extensions.txt 
Command: cewl -m5 --lowercase -w wordlist.txt http://192.168.10.10 # Grabbing keywords that are 5 chars or more, converting to lowercase and saving to .txt file.
Command: ffuf -w ./folders.txt:FOLDERS,./wordlist.txt:WORDLIST,./extensions.txt:EXTENSIONS -u http://192.168.10.10/FOLDERS/WORDLISTEXTENSIONS #  We separate the wordlists by coma and add an alias to them to inject them as fuzzing points later
# Attacking Web Applications with FUFF
